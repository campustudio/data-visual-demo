import "antd/es/form/style";
import _Form from "antd/es/form";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from "react";
import get from 'rc-util/lib/utils/get';

var ProFormDependency = function ProFormDependency(_ref) {
  var name = _ref.name,
      children = _ref.children,
      rest = _objectWithoutProperties(_ref, ["name", "children"]);

  return /*#__PURE__*/React.createElement(_Form.Item, _extends({}, rest, {
    noStyle: true,
    shouldUpdate: function shouldUpdate(prevValues, nextValues) {
      return name.some(function (nameItem) {
        var arrayName = Array.isArray(nameItem) ? nameItem : [nameItem];
        return get(prevValues, arrayName) !== get(nextValues, arrayName);
      });
    }
  }), function (form) {
    var values = form.getFieldsValue(name);
    return children === null || children === void 0 ? void 0 : children(values, form);
  });
};

export default ProFormDependency;