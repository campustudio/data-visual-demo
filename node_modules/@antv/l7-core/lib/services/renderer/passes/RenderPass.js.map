{"version":3,"sources":["../../../../src/services/renderer/passes/RenderPass.ts"],"names":["RenderPass","PassType","Normal","layer","config","rendererService","useFramebuffer","clear","color","depth","stencil","multiPassRenderer","setRenderFlag","render","BaseNormalPass"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;IAMqBA,U,WADpB,4B;;;;;;;;;;;;8BAIkB;AACf,aAAOC,6BAASC,MAAhB;AACD;;;8BAEgB;AACf,aAAO,QAAP;AACD;;;yBAEWC,K,EAAeC,M,EAAyC;AAClE,uGAAWD,KAAX,EAAkBC,MAAlB;AACD;;;2BAEaD,K,EAAe;AAAA,kCACO,KAAKE,eADZ;AAAA,UACnBC,cADmB,yBACnBA,cADmB;AAAA,UACHC,KADG,yBACHA,KADG;AAG3BD,MAAAA,cAAc,CAAC,IAAD,EAAO,YAAM;AACzBC,QAAAA,KAAK,CAAC;AACJC,UAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADH;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,OAAO,EAAE;AAHL,SAAD,CAAL;AAQAP,QAAAA,KAAK,CAACQ,iBAAN,CAAwBC,aAAxB,CAAsC,KAAtC;AACAT,QAAAA,KAAK,CAACU,MAAN;AACAV,QAAAA,KAAK,CAACQ,iBAAN,CAAwBC,aAAxB,CAAsC,IAAtC;AACD,OAZa,CAAd;AAaD;;;EA7BOE,wB","sourcesContent":["import { injectable } from 'inversify';\nimport { ILayer } from '../../layer/ILayerService';\nimport { PassType } from '../IMultiPassRenderer';\nimport BaseNormalPass from './BaseNormalPass';\n\n/**\n * RenderPass，负责输出到后续 PostProcessor 的 readFBO 中\n */\n@injectable()\nexport default class RenderPass<\n  InitializationOptions = {}\n> extends BaseNormalPass<InitializationOptions> {\n  public getType() {\n    return PassType.Normal;\n  }\n\n  public getName() {\n    return 'render';\n  }\n\n  public init(layer: ILayer, config?: Partial<InitializationOptions>) {\n    super.init(layer, config);\n  }\n\n  public render(layer: ILayer) {\n    const { useFramebuffer, clear } = this.rendererService;\n    // const readFBO = layer.multiPassRenderer.getPostProcessor().getReadFBO();\n    useFramebuffer(null, () => {\n      clear({\n        color: [0, 0, 0, 0],\n        depth: 1,\n        stencil: 0,\n        // framebuffer: readFBO,\n      });\n\n      // render to post processor\n      layer.multiPassRenderer.setRenderFlag(false);\n      layer.render();\n      layer.multiPassRenderer.setRenderFlag(true);\n    });\n  }\n}\n"],"file":"RenderPass.js"}